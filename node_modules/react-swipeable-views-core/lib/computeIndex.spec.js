"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _chai = require("chai");

var _computeIndex = _interopRequireDefault(require("./computeIndex"));

var _ref = _react.default.createElement("div", {
  key: "1"
});

var _ref2 = _react.default.createElement("div", {
  key: "2"
});

var _ref3 = _react.default.createElement("div", {
  key: "3"
});

describe('computeIndex', function () {
  var children;
  beforeEach(function () {
    children = [_ref, _ref2, _ref3];
  });
  it('should compute the next index correctly', function () {
    var actual = (0, _computeIndex.default)({
      children: children,
      startIndex: 0,
      startX: 50,
      pageX: 10,
      viewLength: 100,
      resistance: false
    }).index;

    _chai.assert.strictEqual(actual, 0.4);
  });
  describe('resistance', function () {
    it('should not allow to go beyound the bounds when false', function () {
      var actual = (0, _computeIndex.default)({
        children: children,
        startIndex: 0,
        startX: 10,
        pageX: 50,
        viewLength: 100,
        resistance: false
      }).index;

      _chai.assert.strictEqual(actual, 0);
    });
    it('should allow to go beyound the bounds when true', function () {
      var actual = (0, _computeIndex.default)({
        children: children,
        startIndex: 0,
        startX: 10,
        pageX: 50,
        viewLength: 100,
        resistance: true
      }).index;

      _chai.assert.closeTo(actual, -0.21, 0.05);
    });
  });
});