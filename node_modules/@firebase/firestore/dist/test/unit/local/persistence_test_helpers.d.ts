import { IndexedDbPersistence } from '../../../src/local/indexeddb_persistence';
import { MemoryPersistence } from '../../../src/local/memory_persistence';
import { ClientId } from '../../../src/local/shared_client_state';
import { BatchId, TargetId } from '../../../src/core/types';
import { User } from '../../../src/auth/user';
/** The persistence prefix used for testing in IndexedBD and LocalStorage. */
export declare const TEST_PERSISTENCE_PREFIX = "firestore/[DEFAULT]/PersistenceTestHelpers";
/**
 * Creates and starts an IndexedDbPersistence instance for testing, destroying
 * any previous contents if they existed.
 */
export declare function testIndexedDbPersistence(options?: {
    dontPurgeData?: boolean;
    synchronizeTabs?: boolean;
}): Promise<IndexedDbPersistence>;
/** Creates and starts a MemoryPersistence instance for testing. */
export declare function testMemoryPersistence(): Promise<MemoryPersistence>;
/**
 * Populates Web Storage with instance data from a pre-existing client.
 */
export declare function populateWebStorage(user: User, existingClientId: ClientId, existingMutationBatchIds: BatchId[], existingQueryTargetIds: TargetId[]): Promise<void>;
/**
 * Removes Firestore data (by prefix match) from Local Storage.
 */
export declare function clearWebStorage(): void;
